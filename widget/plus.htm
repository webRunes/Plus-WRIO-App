<!DOCTYPE html>
<!-- saved from url=(0029)http://webrunes.com/index.htm -->
<html><head id="head"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="Alexey Anshakov">
    <meta name="keywords" content="webRunes">
    <meta name="google-site-verification" content="wW3kG-1bD4IishxXaidLtiLMKNTR3S0MH7Dnd3HpoY8">
    <title>Plus list</title>
    <!-- Not present in the tutorial. Just for basic styling. -->   

	<script type="application/ld+json">  
        {    
        "@context": "http://schema.org",
        "@type": "ItemList",
        "name": "Covers for my blog",
        "itemListElement": [
        {     
        "@type": "ImageObject",
        "author": "http://webrunes.github.io/webRunes-WRIO-Hub/Alexey-Anshakov.html",
        "name": "All your stuff in one place",
        "thumbnail": "http://domain.com/image200.jpg",
        "contentUrl": "http://webrunes.com/img/sign_in-cover1.jpg",
        "about": "Description",
        "text": [
        ],
        "mentions": [
        {
        "@type": "Article",   
        "name": "First url title",
        "about": "Text inside the ticket popup.",
        "url": "http://webrunes.com/blog.htm?'ваших предпочтений':1,38"
        },
        {
        "@type": "Article",
        "name": "About domainname",
        "about": "Text inside the ticket popup.",
        "url": "http://domainname.com/url.htm?'единый каталог':3,0"
        }
        ]
        }
        ]
        }
    </script>

    <script type="application/ld+json">
    {
        "@context": "http://schema.org",
        "@type": "Article",
        "inLanguage": "ru",
        "keywords": "webRunes",
        "name": "webRunes",
        "about": "Официальный хаб команды webRunes. Информация о проекте, его история развития, цели, а также наш блог.",
        "articleBody": [
        "Мы - команда независимых специалистов технических, финансовых и других областях, разрабатывающие платформу WRIO OS (ссылка). WRIO OS – это вход в семантический и децентрализованный, защищенный интернет. В свою очередь платформа необходима для технической реализации нашего целевого проекта Alternative (ссылка) - это альтернативный подход к взаимодействию людей в обществе при минимальном либо вовсе без участия государства. Проект представляет собой набор идей и их технической реализации в виде связанных между собой сервисов, которые помогают людям на протяжении всей их жизни в различных сферах: образование, здоровье, общение, финансы и так далее.",
        "Первые мысли о проекте начали появляться в конце мая 2010 года, а 20 сентября начал свою работу первый разработчик. К этому времени были заложены начальные идеи сервисов, которые позже стали приложениями WRIO OS.",
        "За четыре с лишним года на собственные средства основателя мы прошли путь от голой идеи до первой рабочей версии, сделав за это время несколько прототипов различных технических подходов, чтобы в итоге найти нужный в реализации WRIO OS и дать ответ на вопрос Alternative: ''какие проекты должны быть реализованы и, главное, ''как'', чтобы если не подвинуть, то хотя бы повернуть мир к лучшему''. Идея не оригинальная, но лишнее усилие в этом направлении никогда не бывает лишним. Также был решен и вопрос какие проекты нужны для популяризации WRIO OS.",
        "В дальнейшем у нас еще бОльшие планы по управлению системой ядром на базе ИИ алгоритмов под названием IA (Individual Assistant, реверс англ. AI - Artificial Intelligence), который станет для каждого пользователя его личным проводником в мир интернета и добавит множество дополнительных функций, в первую очередь по подбору контента. Сегодня первая версия ИИ – это лишь набор сценариев с заданной реакцией (https://ru.wikipedia.org/wiki/Китайская_комната), однако в дальнейшем система станет намного более сложной и продвинутой, о чем можно почитать в хабе IA."
        ],
        "hasPart": [
        {
        "@type": "Article",
        "name": "Цели",
        "articleBody": [
        "Мы не просто создаем проекты, которые обладают набором функций - все они взаимосвязаны, дополняют и тем самым усиляют друг друга. Функционал наших проектов разрабатывается таким образом, чтобы в будущем помогать буквально каждому интернет-пользователю. При этом наши продукты работают как для частного, так и для корпоративного сегментов - если пользователь пришел из одного сегмента, то он найдет для себя полезные функции и в другом. Начали мы с предоставления услуг по публикации контента и получению за него донейта, либо фиксированной оплаты. В дальнейшем мы реализуем корпоративные функции позволяющие легко создавать собственные хабы по продаже всевозможного контента: статьи, аудио, видео, книги, уроки, софт, игры, мобильные приложения и многое другое. Но наша цель - создание ядра, умной системы, которая сможет не только подбирать для пользователя контент, а для его авторов - читателей, но создать уникальную услугу личного секретаря, помощника и советчика по всевозможным житейским и профессиональным вопросам, а главное - помощь в lifelong learning, откуда и вытекает наша цель номер 1 - помогать нашим пользователям в получении достоверной информации, новых знаний и расширении своего кругозора, что отражено в нашем логотипе. Мы верим, что с повышением образования жизнь людей становится лучше для них самих и для общества в целом."
        ]
        },
        {
        "@type": "Article", 
        "name": "Над чем мы работаем",
        "articleBody": [
        "Описание."
        ]
        },
        {
        "@type": "Article", 
        "name": "Команда",
        "url": "webrunes.com/team.htm"
        }
        ],
        "mentions": [
        ],
        "editor": ""
    }
    </script>
  
  </head>   
  <body id="js-app-container">   

    <!--    <script src="scripts/demo.js"></script>-->
	<script type="text/javascript" data-main="http://wrio.s3-website-us-east-1.amazonaws.com/WRIO-InternetOS/main.js" src="http://wrio.s3-website-us-east-1.amazonaws.com/WRIO-InternetOS/require.js"></script>
  </body>
</html>
<!--<template id="plus-plus-template">
    <li class="new panel active"><a href="#element4" data-parent="#nav-accordion" data-toggle="collapse">
        <span class="glyphicon glyphicon-plus"></span></a>

        <div class="collapse" id="element4"></div>
    </li>
</template>

<script type="application/javascript" src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script type="application/javascript" src="/Plus-WRIO-App/public/scripts/client.js"></script>
<script type="application/javascript">
    (function ($, window) {
        var wrioNamespace = window.wrio || {};
        var importDoc = document.currentScript.ownerDocument;
        // plus tab-menu wrapper
        var $accordion = $('<ul class="nav navbar-nav" id="nav-accordion"></ul>');
        // sign '+' markup
        var $plus = $(importDoc.querySelector('#plus-plus-template').innerHTML);
        var storageClient = new CrossStorageClient(wrioNamespace.storageHubUrl + '/Plus-WRIO-App/widget/storageHub.htm');

        storageClient.onConnect().then(function () {
            var storageKey = wrioNamespace.storageKey ? wrioNamespace.storageKey : "plusLdModel";
            return storageClient.get(storageKey);
        }).then(function (model) {
            if (model) {
                createCustomWidget(model)
            }
            return model;
        }).catch(function (err) {
            console.log(err);
        }).then(function () {
            storageClient.close();
        });

        function createCustomWidget(storage) {
            var plusWidget = Object.create(HTMLElement.prototype);
            // browser address url
            var href = window.location.origin + window.location.pathname;

            // draw Plus tabs on callback
            plusWidget.createdCallback = function () {
                var groupedModel = plusWidget.groupByAthour(storage);
                // draw plus Tabs
                for (var i = 0; i < groupedModel.length; i++) {
                    // check if Tab's url same with browser's, if yes - make active
                    var collapseCss = groupedModel[i].url == href ? '' : 'collapsed';
                    var activeCss = groupedModel[i].url == href ? 'active' : '';
                    var $parentTab = $('<li/>', {class: 'panel ' + activeCss});
                    var $parentTabTitle = $('<a data-parent="#nav-accordion" data-toggle="collapse"></a>', {class: collapseCss}).attr('href', '#element' + (i + 1))
                            .html(groupedModel[i].name);

                    $parentTab.append($parentTabTitle);

                    // draw children tab below main authorTab
                    if (groupedModel[i].childTabs.length > 0) {
                        var $childTabsWrapper = $('<ul class="nav nav-pills nav-stacked sub"></ul>');

                        for (var j = 0; j < groupedModel[i].childTabs.length; j++) {
                            var $childTab = $('<li><a href="#" class="pull-right"><span class="glyphicon glyphicon-remove"></span></a></li>');
                            var $childTabTitle = $('<a href="#"></a>').attr('href', groupedModel[i].childTabs[j].url).html(groupedModel[i].childTabs[j].name);
                            $childTab.append($childTabTitle);
                            $childTabsWrapper.append($childTab);
                        }
                        var $div = $('<div/>', {
                            id: 'element' + (i + 1),
                            class: groupedModel[i].url == href ? 'active' : 'collapse'
                        }).append($childTabsWrapper);
                        $parentTab.append($div);
                    }
                    $accordion.append($parentTab);
                }
                $accordion.append($($plus));
                this.innerHTML = $accordion.get(0).outerHTML;
            };
            plusWidget.groupByAthour = function (loModel) {
                if (!loModel) return [];
                var parentTabs = plusWidget.getParentTabs(loModel);
                var childTabs = plusWidget.getChildTabs(loModel);
                var notInsertedChildren = [];

                // crate relationship parent - children
                childTabs.forEach(function (child) {
                    var childInserted = false;
                    parentTabs.forEach(function (parent) {
                        // url - key for determining author's tab
                        if (child.author === parent.url) {
                            parent.childTabs.push(child);
                            childInserted = true;
                        }
                    });

                    if (!childInserted) {
                        notInsertedChildren.push(child);
                    }
                });

                notInsertedChildren.forEach(function (child) {
                    child.name = "My article";
                    child.childTabs = [];
                    parentTabs.push(child);
                })

                return parentTabs.length > 0 ? parentTabs : [];
            };
            plusWidget.getParentTabs = function (loModel) {
                var models = [];
                for (var i = 0; i < loModel.itemList.length; i++) {
                    if (!loModel.itemList[i].author) {
                        var parentTab = loModel.itemList[i];
                        parentTab.childTabs = [];

                        models.push(parentTab);
                    }
                }
                return models;
            };
            plusWidget.getChildTabs = function (loModel) {
                var models = [];
                for (var i = 0; i < loModel.itemList.length; i++) {
                    if (loModel.itemList[i].author) {
                        models.push(loModel.itemList[i]);
                    }
                }
                return models;
            };
            document.registerElement('plus-widget', {prototype: plusWidget});
        };
    })(jQuery, window);
</script>-->